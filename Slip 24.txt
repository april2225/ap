Slip – 24
1. Create an Android application to send email with attachment. 10M
Code : android_main.xml file
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:padding="24dp"
    android:orientation="vertical"
    android:gravity="center">

    <EditText
        android:id="@+id/etTo"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Recipient Email" />

    <EditText
        android:id="@+id/etSubject"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Subject"
        android:layout_marginTop="12dp" />

    <EditText
        android:id="@+id/etMessage"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Message"
        android:layout_marginTop="12dp" />

    <Button
        android:id="@+id/btnChooseFile"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Choose File"
        android:layout_marginTop="16dp" />

    <Button
        android:id="@+id/btnSendEmail"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Send Email"
        android:layout_marginTop="12dp" />
</LinearLayout>

MainActivity.java file -
package com.example.sendemail;

import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.widget.*;
import androidx.annotation.Nullable;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {

    EditText etTo, etSubject, etMessage;
    Button btnChooseFile, btnSendEmail;
    Uri fileUri = null;
    private static final int PICK_FILE_REQUEST = 1;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        etTo = findViewById(R.id.etTo);
        etSubject = findViewById(R.id.etSubject);
        etMessage = findViewById(R.id.etMessage);
        btnChooseFile = findViewById(R.id.btnChooseFile);
        btnSendEmail = findViewById(R.id.btnSendEmail);

        btnChooseFile.setOnClickListener(v -> {
            Intent intent = new Intent(Intent.ACTION_GET_CONTENT);
            intent.setType("*/*"); // Accept any file type
            startActivityForResult(intent, PICK_FILE_REQUEST);
        });

        btnSendEmail.setOnClickListener(v -> {
            String to = etTo.getText().toString();
            String subject = etSubject.getText().toString();
            String message = etMessage.getText().toString();

            Intent emailIntent = new Intent(Intent.ACTION_SEND);
            emailIntent.setType("application/octet-stream");
            emailIntent.putExtra(Intent.EXTRA_EMAIL, new String[]{to});
            emailIntent.putExtra(Intent.EXTRA_SUBJECT, subject);
            emailIntent.putExtra(Intent.EXTRA_TEXT, message);

            if (fileUri != null) {
                emailIntent.putExtra(Intent.EXTRA_STREAM, fileUri);
            }

            try {
                startActivity(Intent.createChooser(emailIntent, "Send email using..."));
            } catch (Exception e) {
                Toast.makeText(MainActivity.this, "No email app found", Toast.LENGTH_SHORT).show();
            }
        });
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if (requestCode == PICK_FILE_REQUEST && resultCode == RESULT_OK && data != null) {
            fileUri = data.getData();
            Toast.makeText(this, "File Selected", Toast.LENGTH_SHORT).show();
        }
    }
}

2.Create an Android Application that Demonstrate TimePickerand display Selected Time on TextView. 15M
Code :  android_main.xml file -
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:padding="24dp"
    android:orientation="vertical"
    tools:context=".MainActivity">

    <TimePicker
        android:id="@+id/timePicker"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:timePickerMode="spinner"
        android:is24HourView="true" />

    <Button
        android:id="@+id/btnShowTime"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Show Selected Time"
        android:layout_marginTop="16dp"/>

    <TextView
        android:id="@+id/textTime"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Selected time will appear here"
        android:layout_marginTop="16dp"
        android:textSize="18sp"/>

</LinearLayout>

MainActivity.java file -
package com.example.timepickerexample;

import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;
import android.widget.TimePicker;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {

    TimePicker timePicker;
    Button btnShowTime;
    TextView textTime;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        timePicker = findViewById(R.id.timePicker);
        btnShowTime = findViewById(R.id.btnShowTime);
        textTime = findViewById(R.id.textTime);

        timePicker.setIs24HourView(true); // Optional, for 24-hour format

        btnShowTime.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                int hour = timePicker.getHour();
                int minute = timePicker.getMinute();
                String selectedTime = String.format("Selected Time: %02d:%02d", hour, minute);
                textTime.setText(selectedTime);
            }
        });
    }
}

 
