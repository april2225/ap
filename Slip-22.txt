<?xml version="1.0" encoding="utf-8"?>
<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent">
<LinearLayout
    android:orientation="vertical"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:padding="16dp">
    <TextView android:text="Select Gender:" />
    <RadioGroup
        android:id="@+id/genderGroup"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content">
        <RadioButton
            android:id="@+id/radioMale"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Male" />
        <RadioButton
            android:id="@+id/radioFemale"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Female" />
    </RadioGroup>
    <TextView android:text="Select Hobbies:" />
    <CheckBox
        android:id="@+id/chkReading"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Reading" />
    <CheckBox
        android:id="@+id/chkMusic"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Music" />
    <CheckBox
        android:id="@+id/chkSports"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Sports" />
    <Button
        android:id="@+id/showBtn"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Show Selection" />
</LinearLayout>
</ScrollView>

MainActivity.java ?
public class MainActivity extends AppCompatActivity {
    RadioGroup genderGroup;
    CheckBox chkReading, chkMusic, chkSports;
    Button showBtn;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        genderGroup = findViewById(R.id.genderGroup);
        chkReading = findViewById(R.id.chkReading);
        chkMusic = findViewById(R.id.chkMusic);
        chkSports = findViewById(R.id.chkSports);
        showBtn = findViewById(R.id.showBtn);
        showBtn.setOnClickListener(v -> {
            StringBuilder result = new StringBuilder();
            // RadioButton
            int selectedId = genderGroup.getCheckedRadioButtonId();
            if (selectedId != -1) {
                RadioButton selectedGender = findViewById(selectedId);
                result.append("Gender: ").append(selectedGender.getText()).append("\n");
            }
            // CheckBoxes
            result.append("Hobbies: ");
            if (chkReading.isChecked()) result.append("Reading ");
            if (chkMusic.isChecked()) result.append("Music ");
            if (chkSports.isChecked()) result.append("Sports ");

            Toast.makeText(getApplicationContext(), result.toString(), Toast.LENGTH_LONG).show();
        });
    }
}
2. Write a program to display latitude and longitude of current location. 15M
Code : activity_main.xml 
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp"
    android:gravity="center">
    <!-- Button to get current location -->
    <Button
        android:id="@+id/getLocationButton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Get Current Location"
        android:textSize="18sp"
        android:layout_marginBottom="20dp" />
    <!-- TextView to display latitude -->
    <TextView
        android:id="@+id/latitudeTextView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Latitude: "
        android:textSize="18sp"
        android:layout_marginBottom="10dp" />

    <!-- TextView to display longitude -->
    <TextView
        android:id="@+id/longitudeTextView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Longitude: "
        android:textSize="18sp" />
</LinearLayout>

MainActivity.java -
package com.example.locationapp;
import android.Manifest;
import android.content.pm.PackageManager;
import android.location.Location;
import android.os.Bundle;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.app.ActivityCompat;
import com.google.android.gms.location.FusedLocationProviderClient;
import com.google.android.gms.location.LocationServices;
import com.google.android.gms.tasks.OnSuccessListener;
public class MainActivity extends AppCompatActivity {
    private TextView latitudeTextView, longitudeTextView;
    private Button getLocationButton;
    private FusedLocationProviderClient fusedLocationClient;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        // Initialize views
        latitudeTextView = findViewById(R.id.latitudeTextView);
        longitudeTextView = findViewById(R.id.longitudeTextView);
        getLocationButton = findViewById(R.id.getLocationButton);
        // Initialize FusedLocationProviderClient
        fusedLocationClient = LocationServices.getFusedLocationProviderClient(this);
        // Button click listener to get location
        getLocationButton.setOnClickListener(v -> getLocation());
    }
    // Method to get the current location
    private void getLocation() {
        // Check if permission is granted
        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED
                && ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
            // Request permission
            ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.ACCESS_FINE_LOCATION}, 1);
            return;
        }
        // Get current location
        fusedLocationClient.getLastLocation()
                .addOnSuccessListener(this, new OnSuccessListener<Location>() {
                    @Override
                    public void onSuccess(Location location) {
                        // Check if location is not null
                        if (location != null) {
                            double latitude = location.getLatitude();
                            double longitude = location.getLongitude();
                            // Display the latitude and longitude
                            latitudeTextView.setText("Latitude: " + latitude);
                            longitudeTextView.setText("Longitude: " + longitude);
                        } else {
                            Toast.makeText(MainActivity.this, "Unable to get location", Toast.LENGTH_SHORT).show();
                        }
                    }
                });
    }
}


